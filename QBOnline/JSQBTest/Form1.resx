<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>