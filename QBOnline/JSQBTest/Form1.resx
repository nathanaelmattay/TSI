<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QGSeW2kAAAAASUVORK5CYII=
</value>
  </data>
</root>